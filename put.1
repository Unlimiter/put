.Dd May 31, 2019
.Dt PUT 1
.Os
.Sh NAME
.Nm put
.Nd write arguments to standard output
.Sh SYNOPSIS
.Nm
.Op Fl Eehnv
.Op Fl d Ar time
.Op Fl t Ar time
.Op Ar argument ...
.Sh DESCRIPTION
The
.Nm
utility writes all given arguments to standard output.
Each argument is separated by a single space
.Pq Sq \ \& ,
and a trailing newline character
.Pq Sq \en
is added.
.Pp
When no arguments are given,
nothing will be written.
The
.Cm --
operand,
which denotes the end of option processing,
is
.Sy not
included in the output.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl d Ar time , Fl -delay Ar time
Delay the printing of each character by
.Ar time
units.
See
.Sx Delayed Printing
below.
.It Fl E , -error
Write arguments to standard error.
.It Fl e , -escape
Interpret and expand escape sequences in the arguments on output.
See
.Sx Escape Sequences
below.
.It Fl h , -help
Print help text to standard output and exit.
.It Fl n , -line
Do not print the trailing newline character.
.It Fl t Ar time , Fl -timeout Ar time
Delay the exiting of
.Nm
by
.Ar time
units.
.It Fl v , -version
Print the version number and copyright info of
.Nm
to standard output and exit.
.El
.Ss Delayed Printing
The
.Fl d
and
.Fl t
options delay the output of text to standard output.
The
.Ar time
argument is in the form
.Sq Ar NUM Ns Ar unit ,
where
.Ar NUM
is the amount of time
.Ar unit Ns s
to delay by.
If
.Ar unit
is omitted, milliseconds are used.
The supported units are as follows:
.Bl -column -offset indent "num" "milliseconds"
.It Cm y   Ta years
.It Cm m   Ta months
.It Cm d   Ta days
.It Cm h   Ta hours
.It Cm min Ta minutes
.It Cm s   Ta seconds
.It Cm ms  Ta milliseconds
.It Cm us  Ta microseconds
.It Cm ns  Ta nanoseconds
.El
.Ss Escape Sequences
If the
.Fl e
option is given,
.Nm
expands specific character escape sequences on output.
These characters,
given in backslash notation as defined in
.St -ansiC ,
are as follows:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm \ea
Print a
.Aq bell
character.
.It Cm \eb
Print a
.Aq backspace
character.
.It Cm \ee
Print an
.Aq escape
character.
.It Cm \ef
Print a
.Aq form-feed
character.
.It Cm \en
Print a
.Aq new-line
character.
.It Cm \er
Print a
.An carriage return
character.
.It Cm \et
Print a
.An tab
character.
.It Cm \ev
Print a
.An vertical tab
character.
.It Cm \e'
Print a single quote character.
.It Cm \e"
Print a double quote character.
.It Cm \e\e
Print a backslash character.
.It Cm \ex Ns Ar num
Print the ASCII character with hexadecimal value
.Ar num ,
which ranges from 0x00 to 0xff.
.El
.Pp
.Nm
also adds custom escape sequences that control the color and format of
the arguments.
They are as follows:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm \ec Ns Ar num
Set the terminal forground to
.Ar num .
.It Cm \eC Ns Ar num
Set the terminal background to
.Ar num .
.It Cm \ed Ns Ar attr
Format text according to attribute
.Ar attr .
.El
.Pp
The color argument
.Ar num
is a hexadecimal number ranging from 00 to ff.
These are equivalent to the 8-bit SGR colors defined in
.%T ISO/IEC 6429 .
They are separated into four groups:
.Bl -tag -width Ds
.It 00\(em07
Normal intensity colors,
Same as the SGR codes from 30-37 and 40-47.
.It 08\(em0f
Increased intensity colors,
same as combining SGR codes 30-37/40-47 with code 1.
.It 10\(eme7
216 color lookup.
Colors are defined using
.EQ
16 + 36 times r + 6 times g + b
.EN
with
.EQ
0 <= r, g, b <= 5.
.EN
.It e8\(emff
24 grayscale color range, starts with black and steps up to white.
.El
.Pp
The formatting attribute argument
.Ar attr
is a single digit number,
corresponding to a set of
.%T ECMA-48
SGR codes.
The supported attributes are as follows:
.Bl -column -offset indent "Attr" "ECMA-48 Code" "long desc"
.It Sy Attr Ta Sy ECMA-48 Code Ta Sy Result
.It Cm 0    Ta N/A             Ta Unsets the current attribute
.It Cm 1    Ta 1               Ta Bold text/increased intensity colors
.It Cm 2    Ta 4               Ta Underlined Text
.It Cm 3    Ta 5               Ta Slowly blinking text
.It Cm 4    Ta 7               Ta Inverted colors
.It Cm 5    Ta 8               Ta Concealed text
.El
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
Print the string
.Dq Hello, World! ,
delaying printing each character by 400 milliseconds:
.Pp
.Dl $ put -d 400ms 'Hello, World!'
.Pp
Print the string
.Dq Colors! ,
formatted to be in multiple colors and be blinking:
.Pp
.Dl $ put -e '\ed3\eccaC\ec4ao\ec5dl\ec29o\ecc8r\ec79s\ec8e!'
.Sh SEE ALSO
.Xr echo 1 ,
.Xr printf 1 ,
.Xr tput 1
.Pp
.Rs
.%I Ecma
.%D 1991
.%R ECMA-48
.%T Control Functions for Coded Character Sets
.%P p. 61
.Re
.Rs
.%I ISO/IEC
.%D 1992
.%R 6429:1992
.%T Control Functions for Coded Character Sets
.Re
.Sh AUTHORS
The
.Nm
utility was written by
.An Unlimiter Aq Mt unlimiter@zoho.com .
This reference was written by
.An Stephen Gregoratto Aq Mt dev@sgregoratto.me .
